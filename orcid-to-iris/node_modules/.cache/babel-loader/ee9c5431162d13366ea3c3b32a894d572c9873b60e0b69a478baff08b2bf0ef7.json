{"ast":null,"code":"var _jsxFileName = \"/Users/bucchiarone/Library/Mobile Documents/com~apple~CloudDocs/Documents/Documents - Antonio\\u2019s MacBook Pro/Projects/orcid-to-iris/orcid-to-iris/orcid-to-iris/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { parseXmlToPublications } from \"./utils/xmlTransformer\";\nimport { exportToCsv } from \"./utils/csvExporter\";\nimport { exportToBibtex } from \"./utils/bibtexExporter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [xmlData, setXmlData] = useState(\"\");\n  const [publications, setPublications] = useState([]);\n  const [error, setError] = useState(\"\");\n  const handleParseXml = async () => {\n    try {\n      const parsedPublications = await parseXmlToPublications(xmlData);\n      setPublications(parsedPublications);\n      setError(\"\");\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleExportFiles = () => {\n    if (publications.length > 0) {\n      exportToCsv(publications, \"iris_import.csv\");\n      exportToBibtex(publications, \"iris_import.bib\");\n    } else {\n      setError(\"No publications available to export.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"XML to IRIS Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: xmlData,\n      onChange: e => setXmlData(e.target.value),\n      placeholder: \"Paste XML here\",\n      rows: \"10\",\n      style: {\n        width: \"100%\",\n        marginBottom: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleParseXml,\n      style: {\n        padding: \"10px 20px\",\n        marginRight: \"10px\"\n      },\n      children: \"Parse XML\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleExportFiles,\n      style: {\n        padding: \"10px 20px\"\n      },\n      children: \"Export CSV & BibTeX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        marginTop: \"10px\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dAsCX/sF1k2KlO8nCjC+qTH3jns=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","parseXmlToPublications","exportToCsv","exportToBibtex","jsxDEV","_jsxDEV","App","_s","xmlData","setXmlData","publications","setPublications","error","setError","handleParseXml","parsedPublications","err","message","handleExportFiles","length","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","rows","width","marginBottom","onClick","marginRight","color","marginTop","_c","$RefreshReg$"],"sources":["/Users/bucchiarone/Library/Mobile Documents/com~apple~CloudDocs/Documents/Documents - Antonioâ€™s MacBook Pro/Projects/orcid-to-iris/orcid-to-iris/orcid-to-iris/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { parseXmlToPublications } from \"./utils/xmlTransformer\";\nimport { exportToCsv } from \"./utils/csvExporter\";\nimport { exportToBibtex } from \"./utils/bibtexExporter\";\n\nfunction App() {\n  const [xmlData, setXmlData] = useState(\"\");\n  const [publications, setPublications] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  const handleParseXml = async () => {\n    try {\n      const parsedPublications = await parseXmlToPublications(xmlData);\n      setPublications(parsedPublications);\n      setError(\"\");\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleExportFiles = () => {\n    if (publications.length > 0) {\n      exportToCsv(publications, \"iris_import.csv\");\n      exportToBibtex(publications, \"iris_import.bib\");\n    } else {\n      setError(\"No publications available to export.\");\n    }\n  };\n\n  return (\n    <div style={{ padding: \"20px\", fontFamily: \"Arial\" }}>\n      <h1>XML to IRIS Converter</h1>\n      <textarea\n        value={xmlData}\n        onChange={(e) => setXmlData(e.target.value)}\n        placeholder=\"Paste XML here\"\n        rows=\"10\"\n        style={{ width: \"100%\", marginBottom: \"10px\" }}\n      />\n      <button onClick={handleParseXml} style={{ padding: \"10px 20px\", marginRight: \"10px\" }}>\n        Parse XML\n      </button>\n      <button onClick={handleExportFiles} style={{ padding: \"10px 20px\" }}>\n        Export CSV & BibTeX\n      </button>\n      {error && <p style={{ color: \"red\", marginTop: \"10px\" }}>{error}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,sBAAsB,QAAQ,wBAAwB;AAC/D,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,cAAc,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMc,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,kBAAkB,GAAG,MAAMd,sBAAsB,CAACO,OAAO,CAAC;MAChEG,eAAe,CAACI,kBAAkB,CAAC;MACnCF,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZH,QAAQ,CAACG,GAAG,CAACC,OAAO,CAAC;IACvB;EACF,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIR,YAAY,CAACS,MAAM,GAAG,CAAC,EAAE;MAC3BjB,WAAW,CAACQ,YAAY,EAAE,iBAAiB,CAAC;MAC5CP,cAAc,CAACO,YAAY,EAAE,iBAAiB,CAAC;IACjD,CAAC,MAAM;MACLG,QAAQ,CAAC,sCAAsC,CAAC;IAClD;EACF,CAAC;EAED,oBACER,OAAA;IAAKe,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBACnDlB,OAAA;MAAAkB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BtB,OAAA;MACEuB,KAAK,EAAEpB,OAAQ;MACfqB,QAAQ,EAAGC,CAAC,IAAKrB,UAAU,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CI,WAAW,EAAC,gBAAgB;MAC5BC,IAAI,EAAC,IAAI;MACTb,KAAK,EAAE;QAAEc,KAAK,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAO;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFtB,OAAA;MAAQ+B,OAAO,EAAEtB,cAAe;MAACM,KAAK,EAAE;QAAEC,OAAO,EAAE,WAAW;QAAEgB,WAAW,EAAE;MAAO,CAAE;MAAAd,QAAA,EAAC;IAEvF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTtB,OAAA;MAAQ+B,OAAO,EAAElB,iBAAkB;MAACE,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAY,CAAE;MAAAE,QAAA,EAAC;IAErE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRf,KAAK,iBAAIP,OAAA;MAAGe,KAAK,EAAE;QAAEkB,KAAK,EAAE,KAAK;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAhB,QAAA,EAAEX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEV;AAACpB,EAAA,CA3CQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}