{"ast":null,"code":"var _jsxFileName = \"/Users/bucchiarone/Library/Mobile Documents/com~apple~CloudDocs/Documents/Documents - Antonio\\u2019s MacBook Pro/Projects/orcid-to-iris/orcid-to-iris/orcid-to-iris/src/components/Callback.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOKEN_URL = \"https://orcid.org/oauth/token\";\nconst CLIENT_ID = \"APP-WNP0NHO3C6679L1F\"; // Replace with your ORCID Client ID\nconst CLIENT_SECRET = \"a00fdf1b-cc43-43db-8a50-3886adec482a\"; // Replace with your ORCID Client Secret\nconst REDIRECT_URI = \"http://localhost:3000/callback\"; // Replace with your app's redirect URI\n\nfunction Callback() {\n  _s();\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const authorizationCode = urlParams.get(\"code\");\n    if (authorizationCode) {\n      fetch(TOKEN_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          client_id: CLIENT_ID,\n          client_secret: CLIENT_SECRET,\n          grant_type: \"authorization_code\",\n          code: authorizationCode,\n          redirect_uri: REDIRECT_URI\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(\"Access Token:\", data.access_token);\n        localStorage.setItem(\"orcid_token\", data.access_token); // Save the token locally\n        alert(\"Authorization successful!\");\n      }).catch(error => console.error(\"Error exchanging token:\", error));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Processing ORCID Authorization...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n}\n_s(Callback, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Callback;\nexport default Callback;\nvar _c;\n$RefreshReg$(_c, \"Callback\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","TOKEN_URL","CLIENT_ID","CLIENT_SECRET","REDIRECT_URI","Callback","_s","urlParams","URLSearchParams","window","location","search","authorizationCode","get","fetch","method","headers","body","JSON","stringify","client_id","client_secret","grant_type","code","redirect_uri","then","response","json","data","console","log","access_token","localStorage","setItem","alert","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bucchiarone/Library/Mobile Documents/com~apple~CloudDocs/Documents/Documents - Antonioâ€™s MacBook Pro/Projects/orcid-to-iris/orcid-to-iris/orcid-to-iris/src/components/Callback.js"],"sourcesContent":["import React, { useEffect } from \"react\";\n\nconst TOKEN_URL = \"https://orcid.org/oauth/token\";\nconst CLIENT_ID = \"APP-WNP0NHO3C6679L1F\"; // Replace with your ORCID Client ID\nconst CLIENT_SECRET = \"a00fdf1b-cc43-43db-8a50-3886adec482a\"; // Replace with your ORCID Client Secret\nconst REDIRECT_URI = \"http://localhost:3000/callback\"; // Replace with your app's redirect URI\n\nfunction Callback() {\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const authorizationCode = urlParams.get(\"code\");\n\n    if (authorizationCode) {\n      fetch(TOKEN_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          client_id: CLIENT_ID,\n          client_secret: CLIENT_SECRET,\n          grant_type: \"authorization_code\",\n          code: authorizationCode,\n          redirect_uri: REDIRECT_URI,\n        }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"Access Token:\", data.access_token);\n          localStorage.setItem(\"orcid_token\", data.access_token); // Save the token locally\n          alert(\"Authorization successful!\");\n        })\n        .catch((error) => console.error(\"Error exchanging token:\", error));\n    }\n  }, []);\n\n  return <div>Processing ORCID Authorization...</div>;\n}\n\nexport default Callback;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,SAAS,GAAG,+BAA+B;AACjD,MAAMC,SAAS,GAAG,sBAAsB,CAAC,CAAC;AAC1C,MAAMC,aAAa,GAAG,sCAAsC,CAAC,CAAC;AAC9D,MAAMC,YAAY,GAAG,gCAAgC,CAAC,CAAC;;AAEvD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClBR,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC7D,MAAMC,iBAAiB,GAAGL,SAAS,CAACM,GAAG,CAAC,MAAM,CAAC;IAE/C,IAAID,iBAAiB,EAAE;MACrBE,KAAK,CAACb,SAAS,EAAE;QACfc,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,SAAS,EAAElB,SAAS;UACpBmB,aAAa,EAAElB,aAAa;UAC5BmB,UAAU,EAAE,oBAAoB;UAChCC,IAAI,EAAEX,iBAAiB;UACvBY,YAAY,EAAEpB;QAChB,CAAC;MACH,CAAC,CAAC,CACCqB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACdC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAACG,YAAY,CAAC;QAC/CC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEL,IAAI,CAACG,YAAY,CAAC,CAAC,CAAC;QACxDG,KAAK,CAAC,2BAA2B,CAAC;MACpC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKP,OAAO,CAACO,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;IACtE;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOpC,OAAA;IAAAqC,QAAA,EAAK;EAAiC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACrD;AAACnC,EAAA,CA9BQD,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AAgCjB,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}