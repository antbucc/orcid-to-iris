{"ast":null,"code":"export function exportToBib(data, filename) {\n  const bibContent = data.map((item, index) => {\n    const entryType = \"article\"; // Adjust the entry type based on your data (e.g., \"book\", \"inproceedings\")\n    return `\n@${entryType}{entry${index},\n  title = {${item.title || \"Unknown Title\"}},\n  author = {${item.authors || \"Unknown Authors\"}},\n  journal = {${item.journal || \"Unknown Journal\"}},\n  year = {${item.year || \"Unknown Year\"}},\n  doi = {${item.doi || \"Unknown\"}},\n  url = {${item.url || \"\"}}\n}`;\n  }).join(\"\\n\");\n  const blob = new Blob([bibContent], {\n    type: \"text/plain;charset=utf-8;\"\n  });\n  const link = document.createElement(\"a\");\n  const url = URL.createObjectURL(blob);\n  link.setAttribute(\"href\", url);\n  link.setAttribute(\"download\", filename);\n  link.style.visibility = \"hidden\";\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}","map":{"version":3,"names":["exportToBib","data","filename","bibContent","map","item","index","entryType","title","authors","journal","year","doi","url","join","blob","Blob","type","link","document","createElement","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild"],"sources":["/Users/bucchiarone/Library/Mobile Documents/com~apple~CloudDocs/Documents/Documents - Antonioâ€™s MacBook Pro/Projects/orcid-to-iris/orcid-to-iris/orcid-to-iris/src/utils/bibExporter.js"],"sourcesContent":["export function exportToBib(data, filename) {\n  const bibContent = data\n    .map((item, index) => {\n      const entryType = \"article\"; // Adjust the entry type based on your data (e.g., \"book\", \"inproceedings\")\n      return `\n@${entryType}{entry${index},\n  title = {${item.title || \"Unknown Title\"}},\n  author = {${item.authors || \"Unknown Authors\"}},\n  journal = {${item.journal || \"Unknown Journal\"}},\n  year = {${item.year || \"Unknown Year\"}},\n  doi = {${item.doi || \"Unknown\"}},\n  url = {${item.url || \"\"}}\n}`;\n    })\n    .join(\"\\n\");\n\n  const blob = new Blob([bibContent], { type: \"text/plain;charset=utf-8;\" });\n  const link = document.createElement(\"a\");\n  const url = URL.createObjectURL(blob);\n  link.setAttribute(\"href\", url);\n  link.setAttribute(\"download\", filename);\n  link.style.visibility = \"hidden\";\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n"],"mappings":"AAAA,OAAO,SAASA,WAAWA,CAACC,IAAI,EAAEC,QAAQ,EAAE;EAC1C,MAAMC,UAAU,GAAGF,IAAI,CACpBG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IACpB,MAAMC,SAAS,GAAG,SAAS,CAAC,CAAC;IAC7B,OAAO;AACb,GAAGA,SAAS,SAASD,KAAK;AAC1B,aAAaD,IAAI,CAACG,KAAK,IAAI,eAAe;AAC1C,cAAcH,IAAI,CAACI,OAAO,IAAI,iBAAiB;AAC/C,eAAeJ,IAAI,CAACK,OAAO,IAAI,iBAAiB;AAChD,YAAYL,IAAI,CAACM,IAAI,IAAI,cAAc;AACvC,WAAWN,IAAI,CAACO,GAAG,IAAI,SAAS;AAChC,WAAWP,IAAI,CAACQ,GAAG,IAAI,EAAE;AACzB,EAAE;EACE,CAAC,CAAC,CACDC,IAAI,CAAC,IAAI,CAAC;EAEb,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACb,UAAU,CAAC,EAAE;IAAEc,IAAI,EAAE;EAA4B,CAAC,CAAC;EAC1E,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;EACxC,MAAMP,GAAG,GAAGQ,GAAG,CAACC,eAAe,CAACP,IAAI,CAAC;EACrCG,IAAI,CAACK,YAAY,CAAC,MAAM,EAAEV,GAAG,CAAC;EAC9BK,IAAI,CAACK,YAAY,CAAC,UAAU,EAAErB,QAAQ,CAAC;EACvCgB,IAAI,CAACM,KAAK,CAACC,UAAU,GAAG,QAAQ;EAChCN,QAAQ,CAACO,IAAI,CAACC,WAAW,CAACT,IAAI,CAAC;EAC/BA,IAAI,CAACU,KAAK,CAAC,CAAC;EACZT,QAAQ,CAACO,IAAI,CAACG,WAAW,CAACX,IAAI,CAAC;AACjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}