{"ast":null,"code":"export async function fetchArticlesFromOrcid(orcidId, accessToken) {\n  const url = `https://pub.orcid.org/v3.0/${orcidId}/works`;\n  const response = await fetch(url, {\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n      Accept: \"application/json\"\n    }\n  });\n  if (!response.ok) {\n    throw new Error(\"Errore durante la richiesta all'API di ORCID.\");\n  }\n  const data = await response.json();\n  const articles = [];\n  for (const work of data.group || []) {\n    var _summary$title, _summary$title$title, _summary$journalTitl, _summary$publication, _summary$publication$;\n    const summary = work[\"work-summary\"][0];\n    const title = ((_summary$title = summary.title) === null || _summary$title === void 0 ? void 0 : (_summary$title$title = _summary$title.title) === null || _summary$title$title === void 0 ? void 0 : _summary$title$title.value) || \"Unknown Title\";\n    let doi = null;\n    for (const extId of ((_summary$externalIds = summary[\"external-ids\"]) === null || _summary$externalIds === void 0 ? void 0 : _summary$externalIds[\"external-id\"]) || []) {\n      var _summary$externalIds;\n      if (extId[\"external-id-type\"] === \"doi\") {\n        doi = extId[\"external-id-value\"];\n        break;\n      }\n    }\n    articles.push({\n      title,\n      authors: \"Unknown Authors\",\n      // ORCID non restituisce gli autori\n      doi,\n      journal: ((_summary$journalTitl = summary[\"journal-title\"]) === null || _summary$journalTitl === void 0 ? void 0 : _summary$journalTitl.value) || \"Unknown Journal\",\n      year: ((_summary$publication = summary[\"publication-date\"]) === null || _summary$publication === void 0 ? void 0 : (_summary$publication$ = _summary$publication.year) === null || _summary$publication$ === void 0 ? void 0 : _summary$publication$.value) || \"Unknown Year\",\n      volume: summary.volume || \"Unknown Volume\",\n      issue: summary.issue || \"Unknown Issue\",\n      pages: summary.pages || \"Unknown Pages\",\n      abstract: \"No abstract available\"\n    });\n  }\n  return articles;\n}","map":{"version":3,"names":["fetchArticlesFromOrcid","orcidId","accessToken","url","response","fetch","headers","Authorization","Accept","ok","Error","data","json","articles","work","group","_summary$title","_summary$title$title","_summary$journalTitl","_summary$publication","_summary$publication$","summary","title","value","doi","extId","_summary$externalIds","push","authors","journal","year","volume","issue","pages","abstract"],"sources":["/Users/bucchiarone/Library/Mobile Documents/com~apple~CloudDocs/Documents/Documents - Antonioâ€™s MacBook Pro/Projects/orcid-to-iris/orcid-to-iris/orcid-to-iris/src/services/orcidService.js"],"sourcesContent":["export async function fetchArticlesFromOrcid(orcidId, accessToken) {\n    const url = `https://pub.orcid.org/v3.0/${orcidId}/works`;\n  \n    const response = await fetch(url, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        Accept: \"application/json\",\n      },\n    });\n  \n    if (!response.ok) {\n      throw new Error(\"Errore durante la richiesta all'API di ORCID.\");\n    }\n  \n    const data = await response.json();\n    const articles = [];\n  \n    for (const work of data.group || []) {\n      const summary = work[\"work-summary\"][0];\n      const title = summary.title?.title?.value || \"Unknown Title\";\n      let doi = null;\n  \n      for (const extId of summary[\"external-ids\"]?.[\"external-id\"] || []) {\n        if (extId[\"external-id-type\"] === \"doi\") {\n          doi = extId[\"external-id-value\"];\n          break;\n        }\n      }\n  \n      articles.push({\n        title,\n        authors: \"Unknown Authors\", // ORCID non restituisce gli autori\n        doi,\n        journal: summary[\"journal-title\"]?.value || \"Unknown Journal\",\n        year: summary[\"publication-date\"]?.year?.value || \"Unknown Year\",\n        volume: summary.volume || \"Unknown Volume\",\n        issue: summary.issue || \"Unknown Issue\",\n        pages: summary.pages || \"Unknown Pages\",\n        abstract: \"No abstract available\",\n      });\n    }\n  \n    return articles;\n  }\n  "],"mappings":"AAAA,OAAO,eAAeA,sBAAsBA,CAACC,OAAO,EAAEC,WAAW,EAAE;EAC/D,MAAMC,GAAG,GAAG,8BAA8BF,OAAO,QAAQ;EAEzD,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;IAChCG,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUL,WAAW,EAAE;MACtCM,MAAM,EAAE;IACV;EACF,CAAC,CAAC;EAEF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;EAClE;EAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;EAClC,MAAMC,QAAQ,GAAG,EAAE;EAEnB,KAAK,MAAMC,IAAI,IAAIH,IAAI,CAACI,KAAK,IAAI,EAAE,EAAE;IAAA,IAAAC,cAAA,EAAAC,oBAAA,EAAAC,oBAAA,EAAAC,oBAAA,EAAAC,qBAAA;IACnC,MAAMC,OAAO,GAAGP,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACvC,MAAMQ,KAAK,GAAG,EAAAN,cAAA,GAAAK,OAAO,CAACC,KAAK,cAAAN,cAAA,wBAAAC,oBAAA,GAAbD,cAAA,CAAeM,KAAK,cAAAL,oBAAA,uBAApBA,oBAAA,CAAsBM,KAAK,KAAI,eAAe;IAC5D,IAAIC,GAAG,GAAG,IAAI;IAEd,KAAK,MAAMC,KAAK,IAAI,EAAAC,oBAAA,GAAAL,OAAO,CAAC,cAAc,CAAC,cAAAK,oBAAA,uBAAvBA,oBAAA,CAA0B,aAAa,CAAC,KAAI,EAAE,EAAE;MAAA,IAAAA,oBAAA;MAClE,IAAID,KAAK,CAAC,kBAAkB,CAAC,KAAK,KAAK,EAAE;QACvCD,GAAG,GAAGC,KAAK,CAAC,mBAAmB,CAAC;QAChC;MACF;IACF;IAEAZ,QAAQ,CAACc,IAAI,CAAC;MACZL,KAAK;MACLM,OAAO,EAAE,iBAAiB;MAAE;MAC5BJ,GAAG;MACHK,OAAO,EAAE,EAAAX,oBAAA,GAAAG,OAAO,CAAC,eAAe,CAAC,cAAAH,oBAAA,uBAAxBA,oBAAA,CAA0BK,KAAK,KAAI,iBAAiB;MAC7DO,IAAI,EAAE,EAAAX,oBAAA,GAAAE,OAAO,CAAC,kBAAkB,CAAC,cAAAF,oBAAA,wBAAAC,qBAAA,GAA3BD,oBAAA,CAA6BW,IAAI,cAAAV,qBAAA,uBAAjCA,qBAAA,CAAmCG,KAAK,KAAI,cAAc;MAChEQ,MAAM,EAAEV,OAAO,CAACU,MAAM,IAAI,gBAAgB;MAC1CC,KAAK,EAAEX,OAAO,CAACW,KAAK,IAAI,eAAe;MACvCC,KAAK,EAAEZ,OAAO,CAACY,KAAK,IAAI,eAAe;MACvCC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ;EAEA,OAAOrB,QAAQ;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}