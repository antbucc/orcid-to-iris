{"ast":null,"code":"const backendUrl = \"orcid2iris-backend.railway.internal/api/orcid\"; // Replace with your backend URL\n\nexport async function fetchPublications(orcidId, token) {\n  try {\n    var _result$activitiesAc, _result$activitiesAc$;\n    const response = await fetch(`${backendUrl}/${orcidId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to fetch publications: ${response.status} ${response.statusText}`);\n    }\n    const result = await response.json();\n    const works = result === null || result === void 0 ? void 0 : (_result$activitiesAc = result[\"activities:activities-summary\"]) === null || _result$activitiesAc === void 0 ? void 0 : (_result$activitiesAc$ = _result$activitiesAc[\"activities:works\"]) === null || _result$activitiesAc$ === void 0 ? void 0 : _result$activitiesAc$[\"activities:group\"];\n    if (!works) {\n      console.warn(\"No works found for this ORCID ID.\");\n      return [];\n    }\n    return works.flatMap(workGroup => parseWorkGroup(workGroup));\n  } catch (error) {\n    console.error(\"Error fetching publications:\", error.message);\n    throw error;\n  }\n}\nfunction parseWorkGroup(workGroup) {\n  const summaries = Array.isArray(workGroup[\"work:work-summary\"]) ? workGroup[\"work:work-summary\"] : [workGroup[\"work:work-summary\"]];\n  return summaries.map(summary => {\n    var _summary$workTitle, _summary$commonExter, _summary$commonExter$, _summary$commonExter$2, _summary$workJournal, _summary$commonPubli;\n    return {\n      title: (summary === null || summary === void 0 ? void 0 : (_summary$workTitle = summary[\"work:title\"]) === null || _summary$workTitle === void 0 ? void 0 : _summary$workTitle[\"common:title\"]) || \"No Title\",\n      doi: (summary === null || summary === void 0 ? void 0 : (_summary$commonExter = summary[\"common:external-ids\"]) === null || _summary$commonExter === void 0 ? void 0 : (_summary$commonExter$ = _summary$commonExter[\"common:external-id\"]) === null || _summary$commonExter$ === void 0 ? void 0 : (_summary$commonExter$2 = _summary$commonExter$.find(id => id[\"common:external-id-type\"] === \"doi\")) === null || _summary$commonExter$2 === void 0 ? void 0 : _summary$commonExter$2[\"common:external-id-value\"]) || \"\",\n      journal: (summary === null || summary === void 0 ? void 0 : (_summary$workJournal = summary[\"work:journal-title\"]) === null || _summary$workJournal === void 0 ? void 0 : _summary$workJournal[\"common:title\"]) || \"No Journal\",\n      year: (summary === null || summary === void 0 ? void 0 : (_summary$commonPubli = summary[\"common:publication-date\"]) === null || _summary$commonPubli === void 0 ? void 0 : _summary$commonPubli[\"common:year\"]) || \"No Year\"\n    };\n  });\n}","map":{"version":3,"names":["backendUrl","fetchPublications","orcidId","token","_result$activitiesAc","_result$activitiesAc$","response","fetch","headers","Authorization","ok","Error","status","statusText","result","json","works","console","warn","flatMap","workGroup","parseWorkGroup","error","message","summaries","Array","isArray","map","summary","_summary$workTitle","_summary$commonExter","_summary$commonExter$","_summary$commonExter$2","_summary$workJournal","_summary$commonPubli","title","doi","find","id","journal","year"],"sources":["/Users/bucchiarone/Library/Mobile Documents/com~apple~CloudDocs/Documents/Documents - Antonioâ€™s MacBook Pro/Projects/orcid-to-iris/orcid-to-iris/orcid-to-iris/src/services/orcidService.js"],"sourcesContent":["const backendUrl = \"orcid2iris-backend.railway.internal/api/orcid\"; // Replace with your backend URL\n\nexport async function fetchPublications(orcidId, token) {\n  try {\n    const response = await fetch(`${backendUrl}/${orcidId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to fetch publications: ${response.status} ${response.statusText}`);\n    }\n\n    const result = await response.json();\n    const works = result?.[\"activities:activities-summary\"]?.[\"activities:works\"]?.[\"activities:group\"];\n\n    if (!works) {\n      console.warn(\"No works found for this ORCID ID.\");\n      return [];\n    }\n\n    return works.flatMap((workGroup) => parseWorkGroup(workGroup));\n  } catch (error) {\n    console.error(\"Error fetching publications:\", error.message);\n    throw error;\n  }\n}\n\nfunction parseWorkGroup(workGroup) {\n  const summaries = Array.isArray(workGroup[\"work:work-summary\"])\n    ? workGroup[\"work:work-summary\"]\n    : [workGroup[\"work:work-summary\"]];\n\n  return summaries.map((summary) => ({\n    title: summary?.[\"work:title\"]?.[\"common:title\"] || \"No Title\",\n    doi: summary?.[\"common:external-ids\"]?.[\"common:external-id\"]\n      ?.find((id) => id[\"common:external-id-type\"] === \"doi\")?.[\"common:external-id-value\"] || \"\",\n    journal: summary?.[\"work:journal-title\"]?.[\"common:title\"] || \"No Journal\",\n    year: summary?.[\"common:publication-date\"]?.[\"common:year\"] || \"No Year\",\n  }));\n}\n"],"mappings":"AAAA,MAAMA,UAAU,GAAG,+CAA+C,CAAC,CAAC;;AAEpE,OAAO,eAAeC,iBAAiBA,CAACC,OAAO,EAAEC,KAAK,EAAE;EACtD,IAAI;IAAA,IAAAC,oBAAA,EAAAC,qBAAA;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,UAAU,IAAIE,OAAO,EAAE,EAAE;MACvDM,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUN,KAAK;MAChC;IACF,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,iCAAiCL,QAAQ,CAACM,MAAM,IAAIN,QAAQ,CAACO,UAAU,EAAE,CAAC;IAC5F;IAEA,MAAMC,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IACpC,MAAMC,KAAK,GAAGF,MAAM,aAANA,MAAM,wBAAAV,oBAAA,GAANU,MAAM,CAAG,+BAA+B,CAAC,cAAAV,oBAAA,wBAAAC,qBAAA,GAAzCD,oBAAA,CAA4C,kBAAkB,CAAC,cAAAC,qBAAA,uBAA/DA,qBAAA,CAAkE,kBAAkB,CAAC;IAEnG,IAAI,CAACW,KAAK,EAAE;MACVC,OAAO,CAACC,IAAI,CAAC,mCAAmC,CAAC;MACjD,OAAO,EAAE;IACX;IAEA,OAAOF,KAAK,CAACG,OAAO,CAAEC,SAAS,IAAKC,cAAc,CAACD,SAAS,CAAC,CAAC;EAChE,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACC,OAAO,CAAC;IAC5D,MAAMD,KAAK;EACb;AACF;AAEA,SAASD,cAAcA,CAACD,SAAS,EAAE;EACjC,MAAMI,SAAS,GAAGC,KAAK,CAACC,OAAO,CAACN,SAAS,CAAC,mBAAmB,CAAC,CAAC,GAC3DA,SAAS,CAAC,mBAAmB,CAAC,GAC9B,CAACA,SAAS,CAAC,mBAAmB,CAAC,CAAC;EAEpC,OAAOI,SAAS,CAACG,GAAG,CAAEC,OAAO;IAAA,IAAAC,kBAAA,EAAAC,oBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,oBAAA,EAAAC,oBAAA;IAAA,OAAM;MACjCC,KAAK,EAAE,CAAAP,OAAO,aAAPA,OAAO,wBAAAC,kBAAA,GAAPD,OAAO,CAAG,YAAY,CAAC,cAAAC,kBAAA,uBAAvBA,kBAAA,CAA0B,cAAc,CAAC,KAAI,UAAU;MAC9DO,GAAG,EAAE,CAAAR,OAAO,aAAPA,OAAO,wBAAAE,oBAAA,GAAPF,OAAO,CAAG,qBAAqB,CAAC,cAAAE,oBAAA,wBAAAC,qBAAA,GAAhCD,oBAAA,CAAmC,oBAAoB,CAAC,cAAAC,qBAAA,wBAAAC,sBAAA,GAAxDD,qBAAA,CACDM,IAAI,CAAEC,EAAE,IAAKA,EAAE,CAAC,yBAAyB,CAAC,KAAK,KAAK,CAAC,cAAAN,sBAAA,uBADpDA,sBAAA,CACuD,0BAA0B,CAAC,KAAI,EAAE;MAC7FO,OAAO,EAAE,CAAAX,OAAO,aAAPA,OAAO,wBAAAK,oBAAA,GAAPL,OAAO,CAAG,oBAAoB,CAAC,cAAAK,oBAAA,uBAA/BA,oBAAA,CAAkC,cAAc,CAAC,KAAI,YAAY;MAC1EO,IAAI,EAAE,CAAAZ,OAAO,aAAPA,OAAO,wBAAAM,oBAAA,GAAPN,OAAO,CAAG,yBAAyB,CAAC,cAAAM,oBAAA,uBAApCA,oBAAA,CAAuC,aAAa,CAAC,KAAI;IACjE,CAAC;EAAA,CAAC,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}