{"ast":null,"code":"export function exportToCsv(data, filename) {\n  const csvContent = [[\"Title\", \"Authors\", \"DOI\", \"Journal\", \"Year\", \"Volume\", \"Issue\", \"Pages\", \"Abstract\", \"Type\", \"Keywords\", \"Publisher\", \"Language\", \"ISBN/ISSN\", \"Funding Info\", \"URL\", \"Open Access\"], ...data.map(item => [item.title, item.authors, item.doi, item.journal, item.year, item.volume, item.issue, item.pages, item.abstract, item.type || \"Unknown\",\n  // Add type info if available\n  item.keywords || \"Unknown\",\n  // Add keywords if available\n  item.publisher || \"Unknown\",\n  // Add publisher if available\n  item.language || \"English\",\n  // Default to English\n  item.isbn_issn || \"Unknown\",\n  // Add ISBN/ISSN if available\n  item.funding || \"None\",\n  // Add funding info if available\n  item.url || \"Unknown\",\n  // Add URL if available\n  item.open_access || \"No\" // Default to No for Open Access\n  ])].map(row => row.join(\",\")).join(\"\\n\");\n  const blob = new Blob([csvContent], {\n    type: \"text/csv;charset=utf-8;\"\n  });\n  const link = document.createElement(\"a\");\n  const url = URL.createObjectURL(blob);\n  link.setAttribute(\"href\", url);\n  link.setAttribute(\"download\", filename);\n  link.style.visibility = \"hidden\";\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}","map":{"version":3,"names":["exportToCsv","data","filename","csvContent","map","item","title","authors","doi","journal","year","volume","issue","pages","abstract","type","keywords","publisher","language","isbn_issn","funding","url","open_access","row","join","blob","Blob","link","document","createElement","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild"],"sources":["/Users/bucchiarone/Library/Mobile Documents/com~apple~CloudDocs/Documents/Documents - Antonioâ€™s MacBook Pro/Projects/orcid-to-iris/orcid-to-iris/orcid-to-iris/src/utils/csvExporter.js"],"sourcesContent":["export function exportToCsv(data, filename) {\n    const csvContent = [\n      [\n        \"Title\", \"Authors\", \"DOI\", \"Journal\", \"Year\", \"Volume\", \"Issue\", \"Pages\", \n        \"Abstract\", \"Type\", \"Keywords\", \"Publisher\", \"Language\", \"ISBN/ISSN\", \n        \"Funding Info\", \"URL\", \"Open Access\"\n      ],\n      ...data.map((item) => [\n        item.title,\n        item.authors,\n        item.doi,\n        item.journal,\n        item.year,\n        item.volume,\n        item.issue,\n        item.pages,\n        item.abstract,\n        item.type || \"Unknown\",         // Add type info if available\n        item.keywords || \"Unknown\",    // Add keywords if available\n        item.publisher || \"Unknown\",   // Add publisher if available\n        item.language || \"English\",    // Default to English\n        item.isbn_issn || \"Unknown\",   // Add ISBN/ISSN if available\n        item.funding || \"None\",        // Add funding info if available\n        item.url || \"Unknown\",         // Add URL if available\n        item.open_access || \"No\"       // Default to No for Open Access\n      ]),\n    ]\n      .map((row) => row.join(\",\"))\n      .join(\"\\n\");\n  \n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\n    const link = document.createElement(\"a\");\n    const url = URL.createObjectURL(blob);\n    link.setAttribute(\"href\", url);\n    link.setAttribute(\"download\", filename);\n    link.style.visibility = \"hidden\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n  "],"mappings":"AAAA,OAAO,SAASA,WAAWA,CAACC,IAAI,EAAEC,QAAQ,EAAE;EACxC,MAAMC,UAAU,GAAG,CACjB,CACE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EACxE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE,WAAW,EACpE,cAAc,EAAE,KAAK,EAAE,aAAa,CACrC,EACD,GAAGF,IAAI,CAACG,GAAG,CAAEC,IAAI,IAAK,CACpBA,IAAI,CAACC,KAAK,EACVD,IAAI,CAACE,OAAO,EACZF,IAAI,CAACG,GAAG,EACRH,IAAI,CAACI,OAAO,EACZJ,IAAI,CAACK,IAAI,EACTL,IAAI,CAACM,MAAM,EACXN,IAAI,CAACO,KAAK,EACVP,IAAI,CAACQ,KAAK,EACVR,IAAI,CAACS,QAAQ,EACbT,IAAI,CAACU,IAAI,IAAI,SAAS;EAAU;EAChCV,IAAI,CAACW,QAAQ,IAAI,SAAS;EAAK;EAC/BX,IAAI,CAACY,SAAS,IAAI,SAAS;EAAI;EAC/BZ,IAAI,CAACa,QAAQ,IAAI,SAAS;EAAK;EAC/Bb,IAAI,CAACc,SAAS,IAAI,SAAS;EAAI;EAC/Bd,IAAI,CAACe,OAAO,IAAI,MAAM;EAAS;EAC/Bf,IAAI,CAACgB,GAAG,IAAI,SAAS;EAAU;EAC/BhB,IAAI,CAACiB,WAAW,IAAI,IAAI,CAAO;EAAA,CAChC,CAAC,CACH,CACElB,GAAG,CAAEmB,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC,CAC3BA,IAAI,CAAC,IAAI,CAAC;EAEb,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACvB,UAAU,CAAC,EAAE;IAAEY,IAAI,EAAE;EAA0B,CAAC,CAAC;EACxE,MAAMY,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;EACxC,MAAMR,GAAG,GAAGS,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC;EACrCE,IAAI,CAACK,YAAY,CAAC,MAAM,EAAEX,GAAG,CAAC;EAC9BM,IAAI,CAACK,YAAY,CAAC,UAAU,EAAE9B,QAAQ,CAAC;EACvCyB,IAAI,CAACM,KAAK,CAACC,UAAU,GAAG,QAAQ;EAChCN,QAAQ,CAACO,IAAI,CAACC,WAAW,CAACT,IAAI,CAAC;EAC/BA,IAAI,CAACU,KAAK,CAAC,CAAC;EACZT,QAAQ,CAACO,IAAI,CAACG,WAAW,CAACX,IAAI,CAAC;AACjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}